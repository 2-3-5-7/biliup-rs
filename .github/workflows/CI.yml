name: CI

on:
  push:
  pull_request:

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: messense/maturin-action@v1
      with:
        manylinux: auto
        command: build
        container: ghcr.io/biliup/manylinux2014-cross:x86_64
        args: --release --sdist -o dist -m crates/stream-gears/Cargo.toml --find-interpreter
#    - name: aarch64
#      uses: messense/maturin-action@v1
#      with:
#        target: aarch64-unknown-linux-gnu
#        command: build
#        args: --release --sdist -o dist -m crates/stream-gears/Cargo.toml --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist
  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
        target: [aarch64, armv7, s390x, ppc64le]
        include:
          - python: pypy3.7
            target: aarch64
          - python: pypy3.8
            target: aarch64
          - python: pypy3.9
            target: aarch64
    steps:
      - uses: actions/checkout@v2
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: -i ${{ matrix.python }} --release --out dist -m crates/stream-gears/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release -o dist -m crates/stream-gears/Cargo.toml --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release -o dist --universal2 -m crates/stream-gears/Cargo.toml --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/py-')"
    needs: [ macos, windows, linux ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *